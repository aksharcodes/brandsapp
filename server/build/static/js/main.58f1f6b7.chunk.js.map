{"version":3,"sources":["reducers/brands.js","reducers/index.js","actions/types.js","store.js","components/Brands.js","actions/brands.js","App.js","index.js"],"names":["initialState","advertiserNames","filterValues","errors","brandsByName","loading","combineReducers","brands","state","action","type","payload","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","connect","getAllBrands","dispatch","a","axios","get","res","data","message","getBrandsByName","name","adverFilterNames","names","useEffect","advertisersName","map","campaign","advertiserName","advertiserUniqueNames","filter","x","i","indexOf","useState","toggleDropDown","setToggleDropDown","inputVal","setInputVal","brandLabel","setBrandLabel","timeLineLabel","setTimeLineLabel","aClickHandler","e","target","text","Object","keys","length","className","value","onChange","toLowerCase","includes","href","onClick","nativeEvent","index","key","brand","campaigns","App","reactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58f1f6b7.chunk.js","sourcesContent":["import { GET_ALL_BRANDS, BRANDS_ERROR,BRANDS_BY_NAME,SET_FILTER_VALUES } from '../actions/types';\n\nconst initialState = {\n    advertiserNames: [],\n    filterValues:[],\n    errors: {},\n    brandsByName : [],\n    loading: true\n}\n\n\nexport default function(state = initialState, action){\n\n    const { type, payload } = action;\n\n    switch (type) {\n        case GET_ALL_BRANDS:\n            return {\n                ...state,\n                advertiserNames: payload,\n                loading: false\n            }\n        case BRANDS_BY_NAME:\n        return {\n            ...state,\n            brandsByName: payload,\n            loading: false\n        }\n        case BRANDS_ERROR:\n            return {\n                ...state,\n                loading: false,\n                errors:payload\n            }\n            case SET_FILTER_VALUES:\n                return{\n                    ...state,\n                    loading:false,\n                    filterValues : payload\n                }\n        default:\n            return state\n    }\n    \n}","import {combineReducers} from 'redux';\nimport brands from './brands';\n\nexport default combineReducers({\n    brands\n})","export const GET_ALL_BRANDS = 'GET_ALL_BRANDS';\nexport const BRANDS_ERROR = 'BRANDS_ERROR';\nexport const BRANDS_BY_NAME = 'BRANDS_BY_NAME';\nexport const SET_FILTER_VALUES = 'SET_FILTER_VALUES';","import {createStore, applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\n\n\nconst store = createStore(rootReducer,composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store;","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getAllBrands, getBrandsByName,adverFilterNames } from '../actions/brands';\nimport propTypes from 'prop-types';\n\nconst Brands = ({ getAllBrands, getBrandsByName,adverFilterNames, brands: { advertiserNames, loading, errors, brandsByName,filterValues } }) => {\n\n    useEffect(() => {\n        getAllBrands();\n        // eslint-disable-next-line\n    }, [])\n\n    const advertisersName = advertiserNames.map(campaign => campaign.advertiserName)\n    let advertiserUniqueNames = advertisersName.filter((x, i) => advertisersName.indexOf(x) >= i)\n    \n    const [toggleDropDown, setToggleDropDown] = useState(false);\n    const [inputVal, setInputVal] = useState('');\n    const [brandLabel, setBrandLabel] = useState('');\n    const [timeLineLabel, setTimeLineLabel] = useState('');\n\n    const iValHandler = e => {\n        setToggleDropDown(!toggleDropDown);\n    }\n\n    const inputChangeHandler = e => {\n        adverFilterNames(advertiserUniqueNames.filter(x => x.toLowerCase().includes(e.target.value.toLowerCase())))\n        setToggleDropDown(!toggleDropDown);\n        setInputVal(e.target.value);\n        if(e.target.value === ''){\n            setBrandLabel('')\n        }\n    }\n    const aClickHandler = e => {\n        setInputVal(e.target.text)\n        setToggleDropDown(!toggleDropDown);\n        setBrandLabel(e.target.text)\n        getBrandsByName(e.target.text)\n    }\n\n    const timeHandler = e => {\n        setTimeLineLabel(e.nativeEvent.target[e.target.value].text)\n    }\n\n\n    return (\n        <>\n            {!loading && Object.keys(errors).length ?\n                (<h1>{errors}</h1>) :\n                (<>\n                    <nav className='nav'>\n                        <div>\n                            <label>Advertiser</label>\n                            <input type=\"text\" name=\"advert\" value={inputVal} onChange={inputChangeHandler} />\n                            <a href='#!'><i className=\"fa fa-arrow-down ival\" onClick={iValHandler}></i> </a>\n                        </div>\n                        <div>\n                            <label>Timeline</label>\n                            <select onChange={timeHandler}>\n                                <option value=\"0\">Options</option>\n                                <option value=\"1\">Today</option>\n                                <option value=\"2\">Last 7 days</option>\n                                <option value=\"3\">Last quarter</option>\n                                <option value=\"4\">Last month</option>\n                                <option value=\"5\">Last year</option>\n                                <option value=\"6\">Custom date</option>\n                            </select>\n                        </div>\n                    </nav>\n                      {toggleDropDown && filterValues.length > 0 ? (<div className='divAdver'>{filterValues.map((name, index) => (<>\n                            <div key={index}><a href='#!' onClick={aClickHandler}>{name}</a></div>\n                        </>))}</div>) : (toggleDropDown && <><div className='divAdver'>{advertiserUniqueNames.map((name, index) => (<>\n                            <div key={index}><a href='#!' onClick={aClickHandler}>{name}</a></div>\n                        </>))}</div></>)}\n                    <div className='brandLabel'>\n                        {brandLabel && (<><label>Hello {brandLabel} !</label></>)}\n                    </div>\n                    <div className='timelineLabel'>\n                        {timeLineLabel && timeLineLabel !== 'Options' && (<><label>Showing {timeLineLabel} data</label></>)}\n                    </div>\n                    {brandsByName !== null && brandsByName.length > 0 &&\n                        <div className=\"brandDiv\">\n                            <table className=\"brandTable\">\n                                <tr>\n                                    <th><i className=\"fa fa-arrow-circle-down\"></i>Brand Name</th>\n                                    <th><i className=\"fa fa-arrow-circle-down\"></i>First campaign Name</th>\n                                    <th><i className=\"fa fa-arrow-circle-down\"></i>Count of campaigns inside brand</th>\n                                </tr>\n                                {brandsByName.map((brand, index) => (\n                                    <>\n                                        <tr key={index}>\n                                            <td>{brand.name}</td>\n                                            <td>{brand.campaigns !== null && brand.campaigns.length > 0 ? brand.campaigns[0].name : 'No campaigns Found'}</td>\n                                            <td>{brand.campaigns.length}</td>\n                                        </tr>\n                                    </>))}\n                            </table>\n                        </div>}\n                </>)}\n        </>\n    )\n}\n\nBrands.propTypes = {\n    getAllBrands: propTypes.func.isRequired,\n    getBrandsByName: propTypes.func.isRequired,\n    brands: propTypes.object.isRequired,\n    adverFilterNames : propTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    brands: state.brands\n})\n\nexport default connect(mapStateToProps, { getAllBrands, getBrandsByName,adverFilterNames })(Brands)\n\n","import axios from 'axios';\nimport {GET_ALL_BRANDS,BRANDS_ERROR,BRANDS_BY_NAME,SET_FILTER_VALUES} from './types';\n\n\nexport const getAllBrands = () => async dispatch => {\n\ntry{\n\n  const res = await axios.get('/brands/advertisersNames');\n  dispatch({\n      type:GET_ALL_BRANDS,\n      payload:res.data\n  })\n}\ncatch(err){\n    dispatch({\n        type:BRANDS_ERROR,\n        payload:{\"errors\" : err.message}\n    })\n}\n}\n\nexport const getBrandsByName = (name) => async dispatch => {\n    try{\n        const res = await axios.get(`/brands/getBrands/${name}`)\n        dispatch({\n            type:BRANDS_BY_NAME,\n            payload:res.data\n        })\n    }\n    catch(err){\n        dispatch({\n            type:BRANDS_ERROR,\n            payload:{\"errors\":err.message}\n        })\n    }\n}\n\n\nexport const adverFilterNames = (names) => dispatch => {\n     dispatch({\n         type: SET_FILTER_VALUES,\n         payload:names\n     })\n}","import React from 'react';\nimport store from './store';\nimport {Provider} from 'react-redux';\nimport Brands from './components/Brands';\nimport './App.css' //styleLoader in webpack\n\nconst App = () => {\n  return (\n    <Provider store = {store}>\n    <Brands/>\n    </Provider>\n  )\n}\n\nexport default App","import React from 'react';\nimport reactDOM from 'react-dom';\nimport App from './App';\n\nreactDOM.render(<App/>,document.getElementById('root'))\n\n\n"],"sourceRoot":""}